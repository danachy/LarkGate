version: '3.8'

services:
  # Lark MCP Server
  lark-mcp:
    image: node:20-alpine
    container_name: lark-mcp
    restart: unless-stopped
    working_dir: /app
    command: >
      sh -c "
        apk add --no-cache libsecret-dev &&
        npm install -g @larksuiteoapi/lark-mcp &&
        npx @larksuiteoapi/lark-mcp mcp 
          --mode sse 
          --port 3001 
          --host 0.0.0.0
          --app-id $${FEISHU_APP_ID}
          --app-secret $${FEISHU_APP_SECRET}
      "
    ports:
      - "3001:3001"
    environment:
      - FEISHU_APP_ID=${FEISHU_APP_ID}
      - FEISHU_APP_SECRET=${FEISHU_APP_SECRET}
    networks:
      - larkgate-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/sse"]
      interval: 30s
      timeout: 10s
      retries: 3

  # LarkGate Gateway
  larkgate:
    build: .
    container_name: larkgate
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file:
      - .env
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      lark-mcp:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - MCP_HOST=lark-mcp
      - MCP_PORT=3001
    networks:
      - larkgate-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  larkgate-network:
    driver: bridge